{"version":3,"sources":["assets/earth.jpg","App.js","reportWebVitals.js","index.js"],"names":["Earth","props","mesh","useRef","useState","active","setActive","useFrame","current","rotation","x","y","texture","useMemo","THREE","load","earth","ref","scale","onClick","e","args","attach","transparent","side","object","App","intensity","position","angle","penumbra","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"4NAAe,MAA0B,kCCMnCA,EAAQ,SAACC,GACb,IAAMC,EAAOC,mBADU,EAEKC,oBAAS,GAFd,mBAEhBC,EAFgB,KAERC,EAFQ,KAGvBC,aAAS,WACPL,EAAKM,QAAQC,SAASC,EAAIR,EAAKM,QAAQC,SAASE,GAAK,QAGvD,IAAMC,EAAUC,mBAAQ,kBAAM,IAAIC,iBAAsBC,KAAKC,KAAQ,IAErE,OACE,mCACE,iDACMf,GADN,IAEEgB,IAAKf,EACLgB,MAAOb,EAAS,CAAC,EAAG,EAAG,GAAK,CAAC,IAAK,IAAK,KACvCc,QAAS,SAACC,GAAD,OAAOd,GAAWD,IAJ7B,UAME,sCAAsBgB,KAAM,CAAC,KAC7B,mCAAmBC,OAAO,WAAWC,aAAW,EAACC,KAAMV,aAAvD,SACE,2BAAWQ,OAAO,MAAMG,OAAQb,aAkB3Bc,EAXH,WACV,OACE,eAAC,IAAD,WACE,8BAAcC,UAAW,KACzB,2BAAWC,SAAU,CAAC,GAAI,GAAI,IAAKC,MAAO,IAAMC,SAAU,IAC1D,4BAAYF,SAAU,EAAE,IAAK,IAAK,MAClC,cAAC,EAAD,CAAOA,SAAU,CAAC,EAAG,EAAG,SC1BfG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,EAAgBc,QAAQC,O","file":"static/js/main.74ee41c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth.3148104f.jpg\";","import React, { useRef, useState, useMemo } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\n\nimport earth from \"./assets/earth.jpg\";\n\nconst Earth = (props) => {\n  const mesh = useRef();\n  const [active, setActive] = useState(false);\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.001;\n  });\n\n  const texture = useMemo(() => new THREE.TextureLoader().load(earth), []);\n\n  return (\n    <>\n      <mesh\n        {...props}\n        ref={mesh}\n        scale={active ? [2, 2, 2] : [1.5, 1.5, 1.5]}\n        onClick={(e) => setActive(!active)}\n      >\n        <sphereBufferGeometry args={[1]} />\n        <meshBasicMaterial attach=\"material\" transparent side={THREE.DoubleSide}>\n          <primitive attach=\"map\" object={texture} />\n        </meshBasicMaterial>\n      </mesh>\n    </>\n  );\n}\n\nconst App = () => {\n  return (\n    <Canvas>\n      <ambientLight intensity={0.5} />\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n      <pointLight position={[-10, -10, -10]} />\n      <Earth position={[0, 0, 0]} />\n    </Canvas>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(console.log);"],"sourceRoot":""}